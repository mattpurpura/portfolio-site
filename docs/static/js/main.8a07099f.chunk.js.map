{"version":3,"sources":["components/navbar.js","components/contact.js","Pages/Landing.js","App.js","serviceWorker.js","index.js","assets/images/black-smokey.png","assets/images/agility-project-page.JPG","assets/images/ascent-chart.JPG","assets/images/crypto-tracker.JPG"],"names":["MenuAppBar","state","anchorEl","handleChange","event","_this","setState","auth","target","checked","handleMenu","currentTarget","handleClose","classes","this","props","react_default","a","createElement","className","root","AppBar_default","position","Toolbar_default","Typography_default","variant","color","grow","React","Component","withStyles","flexGrow","menuButton","marginLeft","marginRight","OutlinedTextFields","name","age","multiline","currency","Object","defineProperty","value","Grid_default","container","direction","justify","alignItems","item","TextField_default","id","label","onChange","margin","InputProps","input","text","InputLabelProps","textField","type","autoComplete","rows","theme","display","borderColor","spacing","unit","width","dense","marginTop","menu","Landing","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleScrollToElement","window","scrollTo","top","Project","current","offsetTop","behavior","About","Contact","createRef","_this2","style","backgroundImage","concat","Background","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","wrap","backgroundColor","minHeight","paddingLeft","height","onClick","ref","justifyContent","fontSize","class","href","Paper_default","src","Agility","Ascent","Crypto","paddingTop","contact","App","BrowserRouter","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8a07099f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MenuAppBar extends React.Component {\r\n  state = {\r\n    // auth: true,\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ auth: event.target.checked });\r\n  };\r\n\r\n  handleMenu = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    // const { auth, anchorEl } = this.state;\r\n    // const open = Boolean(anchorEl);\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n      \r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            {/* <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n              <MenuIcon />\r\n            </IconButton> */}\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Matt Purpura\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenuAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MenuAppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    display: 'flex',\r\n  },\r\n  root: {\r\n    borderColor: 'white',\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: '600px'\r\n  },\r\n  label:{\r\n    color: 'white'\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: '600px',\r\n  },\r\n  text:{\r\n    color: 'white'\r\n  },\r\n  dense: {\r\n    marginTop: 16,\r\n  },\r\n  menu: {\r\n    width: 200,\r\n  },\r\n});\r\n\r\nclass OutlinedTextFields extends React.Component {\r\n  state = {\r\n    name: 'Matt Purpura',\r\n    age: '',\r\n    multiline: 'Controlled',\r\n    currency: 'EUR',\r\n  };\r\n\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item justify='center'> \r\n        {/* <form className={classes.container} noValidate autoComplete=\"off\"> */}\r\n            <TextField\r\n            id=\"outlined-name\"\r\n            label=\"Name\"\r\n            // className={classes.textField}\r\n            onChange={this.handleChange('name')}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n                classes: {\r\n                  input: classes.text\r\n                }}\r\n            }\r\n            InputLabelProps={{\r\n                classes: {\r\n                  root: classes.label\r\n                }}\r\n            }\r\n            classes={{\r\n                root: classes.root,\r\n                label: classes.label\r\n            }}\r\n            />\r\n        </Grid>\r\n        <Grid item>\r\n            <TextField\r\n            id=\"outlined-email-input\"\r\n            label=\"Email\"\r\n            className={classes.textField}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n                classes: {\r\n                  input: classes.text\r\n                }}\r\n            }\r\n            InputLabelProps={{\r\n                classes: {\r\n                  root: classes.label\r\n                }}\r\n            }\r\n            />\r\n        </Grid>\r\n        <Grid item>\r\n            <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"Message\"\r\n            multiline\r\n            rows=\"15\"\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{\r\n                classes: {\r\n                  input: classes.text\r\n                }}\r\n            }\r\n            InputLabelProps={{\r\n                classes: {\r\n                  root: classes.label\r\n                }}\r\n            }\r\n            />\r\n        {/* </form> */}\r\n        </Grid>\r\n    </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nOutlinedTextFields.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(OutlinedTextFields);","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport NavBar from '../components/navbar';\r\nimport ContactForm from '../components/contact';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Background from '../assets/images/black-smokey.png';\r\nimport Agility from '../assets/images/agility-project-page.JPG';\r\nimport Ascent from '../assets/images/ascent-chart.JPG';\r\nimport Crypto from '../assets/images/crypto-tracker.JPG';\r\nimport './landing.css';\r\n\r\n\r\nclass Landing extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.Project = React.createRef();\r\n        this.About = React.createRef();\r\n        this.Contact = React.createRef();\r\n\r\n    }\r\n\r\n\r\n    handleScrollToElement = (name, event) => {\r\n        if (name==='Project'){\r\n            window.scrollTo({\r\n                top: this.Project.current.offsetTop, \r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n        else if (name==='About'){\r\n            window.scrollTo({\r\n                top: this.About.current.offsetTop, \r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n        else if (name==='Contact'){\r\n            window.scrollTo({\r\n                top: this.Contact.current.offsetTop, \r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n    <div style={{\r\n        backgroundImage: `url(${Background})`,\r\n        // height: '500px', \r\n        backgroundAttachment: 'fixed',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover'\r\n    }}>\r\n    <Grid container direction='row' wrap='nowrap'>\r\n        <Grid item style={{position: 'fixed', backgroundColor: 'white', minHeight: '100%'}}>\r\n            <Grid container direction='column'>\r\n                <Grid item style={{paddingLeft: 15}}>\r\n                    <h1 className='text'>Matt Purpura</h1>\r\n                </Grid>\r\n                <Grid item style={{marginTop: 100}}>\r\n                    <div style={{\r\n                        height: 200, \r\n                        width: 200,\r\n                        display: 'block',\r\n                        paddingLeft: 30, \r\n                        color: 'black'\r\n                        }}>\r\n                        <h5 className='menuTab text' onClick={() => this.handleScrollToElement('About')}>About</h5>\r\n                        <h5 className='menuTab' onClick={() => this.handleScrollToElement('Project')}>Projects</h5>\r\n                        <h5 className='menuTab' onClick={() => this.handleScrollToElement('Contact')}>Contact</h5>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n         <Grid id='projects' item container direction='column' style={{\r\n             marginLeft: 230,\r\n         }}>\r\n            {/* <Grid item>\r\n                <NavBar />\r\n            </Grid> */}\r\n            <Grid item>\r\n                <div ref={this.About} style={{\r\n                    height: 750, \r\n                    display: 'flex', \r\n                    justifyContent: 'center', \r\n                    alignItems: 'center'\r\n                }} id='about'>\r\n                    <div style={{\r\n                        color: 'white',\r\n                        fontSize: \"30px\",\r\n                    }}>\r\n                        <h1 class='text'>Full-Stack Web Developer</h1>\r\n                        <h5 class='text'>Javascript • JQuery • MySQL • Mongo • Express • React • Node</h5>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n            <Grid item container direction='column'>\r\n                <div style={{\r\n                    height: 500,\r\n                    backgroundColor: 'white'\r\n                }} id='project1' ref={this.Project}>\r\n                    <Grid item>\r\n                        <h1 class='text project-title'>Agility | Project Management</h1>\r\n                    </Grid>\r\n                    <Grid item container direction='row'>\r\n                         <Grid item>\r\n                            <div className='description'>\r\n                                <p>\r\n                                    A project management app built to work within an agile enviroment. \r\n                                </p>\r\n                                <p>\r\n                                    Create and manage projects <br/> \r\n                                    Plan your sprints by creating and assigning tasks <br/>\r\n\r\n                                    Invite users to participate in specific sprints<br/>\r\n                                    Track your team's progress as tasks are completed<br/> <br/>\r\n                                    After each sprint, review key metrics such as:\r\n                                    <ul>\r\n                                        <li>Tasks completed by team member</li>\r\n                                        <li>Average task complexity</li>\r\n                                        <li>Primary stacks for each team member</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                                <div className='project-link'>\r\n                                   <a className='link-text' href='http://scrum41.herokuapp.com/'> Check It Out</a>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Paper style={{marginLeft: 30}}>\r\n                                <img src={`${Agility}`} style={{height: 350}}/>\r\n                            </Paper>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <div className='stack'>Node</div>\r\n                                <div className='stack'>React</div>\r\n                                <div className='stack'>MySQL</div>\r\n                                <div className='stack'>Express</div>\r\n                                <div className='stack'>Material</div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n            <Grid item container direction='column' style={{marginTop: 20}}>\r\n                <div id='project2' style={{\r\n                    height: 500,\r\n                    // backgroundColor: 'white'\r\n                    color: 'white'\r\n                }}>\r\n                    <Grid item container justify='flex-end'>\r\n                        <h1 style={{marginRight: 125}} class='text project-title'>Ascent | Health & Wellness</h1>\r\n                    </Grid>\r\n                    <Grid item container direction='row'>\r\n                        <Grid item>\r\n                            <Paper style={{marginLeft: 30, marginRight: 30}}>\r\n                            <img src={`${Ascent}`} style={{height: 350}}/>\r\n                            </Paper>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <div className='stack-black'>Javascript</div>\r\n                                <div className='stack-black'>Node</div>\r\n                                <div className='stack-black'>MySQL</div>\r\n                                <div className='stack-black'>Express</div>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <div className='description-dark'>\r\n                            <p>\r\n                                An app built to support data-driven fitness training. \r\n                            </p>\r\n                            <p>\r\n                                    Log and track workouts by type <br/> \r\n                                    Sync past workouts from mobile fitness apps such as Strava<br/>\r\n                                    Use workout history to generate personal fitness level <br/>\r\n                                    Compare your fitness level with the stress on your body <br/>\r\n                                    Stress levels are created using:<br/>\r\n                                    <ul>\r\n                                        <li>Heart rate data (if available)</li>\r\n                                        <li>Rate of Perceived Exertion</li>\r\n                                        <li>Primary stacks for each team member</li>\r\n                                    </ul>\r\n                                </p>\r\n\r\n                                <div className='project-link-dark'>\r\n                                   <a className='link-text-dark' href='http://ascent-project.herokuapp.com/'> Check It Out</a>\r\n                                </div>\r\n                        </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n            <Grid item container direction='column'>\r\n                <div style={{\r\n                    height: 500,\r\n                    backgroundColor: 'white'\r\n                }} id='project1'>\r\n                    <Grid item>\r\n                        <h1 class='text project-title'>Crypto Tracker | Finance</h1>\r\n                    </Grid>\r\n                    <Grid item container direction='row'>\r\n                         <Grid item>\r\n                            <div className='description'>\r\n                                <p>\r\n                                    Track prices of your favorite crypto currencies <br/> across various exchanges. \r\n                                </p>\r\n                                <p>\r\n                                    Select preferred crypto currency and exchanges <br/> \r\n                                    Update prices to get to-the-second data <br/>\r\n                                    Create a custom portfolio of stocks to benchmark trends <br/>\r\n\r\n                                    All user preferences are passively saved in real-time<br/>\r\n                                </p>\r\n\r\n                                <div className='project-link' style={{marginTop: 165}}>\r\n                                   <a className='link-text' href='https://mattpurpura.github.io/project-1/'> Check It Out</a>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                            \r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Paper style={{marginLeft: 100}}>\r\n                                <img src={`${Crypto}`} style={{height: 350}}/>\r\n                            </Paper>\r\n                            <div style={{display: 'flex', justifyContent: 'center'}}>\r\n                                <div className='stack'>Javascript</div>\r\n                                <div className='stack'>JQuery</div>\r\n                                <div className='stack'>AJAX</div>\r\n                                <div className='stack'>Firebase</div>\r\n                                <div className='stack'>Bootstrap</div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Grid>\r\n            <Grid item>\r\n                <div id='contact' style={{minHeight: 595, paddingTop: 150}} ref={this.Contact}>\r\n                <ContactForm/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n    </div>\r\n   \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Landing from './Pages/Landing'\n\n\nclass App extends Component {\n  render() {\n    return (\n     <Router>\n       <Route exact path='/' component={Landing} />\n     </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/black-smokey.55fdc2bc.png\";","module.exports = __webpack_public_path__ + \"static/media/agility-project-page.1af0d021.JPG\";","module.exports = __webpack_public_path__ + \"static/media/ascent-chart.cb57d377.JPG\";","module.exports = __webpack_public_path__ + \"static/media/crypto-tracker.0bf2510a.JPG\";"],"sourceRoot":""}